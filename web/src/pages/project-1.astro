---
import Image from "astro/components/Image.astro";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import screenshot_avis from "/src/assets/images/visuel_app_avis_alerte.png";
---

<StarlightPage
    frontmatter={{
        title: "Projet 1: Conception d'une application React pour les Avis et alertes de Montréal.",
    }}
    hasSidebar={false}
    headings={[
        { text: "Mandat du projet", slug: "work", depth: 2 },
        { text: "Spécifications", slug: "spec", depth: 2 },
        { text: "Évaluation", slug: "evaluation", depth: 2 },
    ]}
>
    <p>
        La section <a href="https://montreal.ca/avis-et-alertes"
            ><em>Avis et alertes</em></a
        > présente les avis et alertes qui ont été émis par l'outil de gestion des
        alertes de la Ville. Les avis et alertes communiquent les renseignements
        importants à la population en cas d'urgence et en situations pouvant avoir
        un impact sur la vie quotidienne (ex: avis d'ébullition d'eau, travaux, fermeture
        de piscine, etc.).
    </p>
    <p>
        L'objectif de ce projet est de rendre l'information plus accessible et
        plus facile à consulter pour les citoyens de Montréal. Nous voulons que
        les informations soit accessibles en tout temps, même sans connexion
        internet et que les citoyens reçoivent des notifications d'alertes (sur
        leurs appareils) dès qu'elles sont émises, sans avoir à consulter
        directement l'application. <br />
        Pour ce faire, nous allons transformer le site web en application web progressive
        (PWA). Le développement se fera en 3 phases, avec la première se concentrant
        sur la création de l'interface interactive.
    </p>

    <h2 id="work">Mandat du projet</h2>
    <Image
        src={screenshot_avis}
        alt="Capture du site d'avis et alertes de la ville de Montréal"
        style={{ width: "100%", maxWidth: "900px", marginTop: "12px" }}
    />
    <p>
        Pour la première phase du projet, vous devez créer une application avec
        React reproduisant le plus fidèlement possible la structure de la page
        (voir image plus haut). L'application aura des fonctionnalités de
        recherche et filtre et présentera deux pages principales: la page
        d'accueil et la page de détail.
    </p>
    <ol>
        <li>
            Page d'accueil: Présente la liste des alertes et fournis des
            capacités de recherche.
        </li>
        <li>Page de détail: Présente le détail d'une alerte spécifique.</li>
    </ol>

    <h2 id="spec">Spécifications</h2>
    <ul>
        <li>
            <b>En-tête:</b> L'entête inclut le logo de la Ville et un lien de connexion <em>Mon Compte</em> (inactif).
            <ul style="margin: 0;">
                <li>Les deux pages principales partagent le même en-tête</li>
                <li>L'en tête n'a pas besoin d'être collante (suivre le défilement de la page)</li>
            </ul>
        </li>
        <li>
            <b>Recherche:</b> La recherche se fait sur le nom (titre) des alertes et avis.
        </li>
        <li>
            <b>Filtre:</b> Pour chaque filtre (arrondissement, date, sujet), seule une
            valeur peut être sélectionnée à la fois.
            <ul style="margin: 0;">
                <li>Filtre de date: Utilisez deux champs texte pour représenter la période.</li>
                <li>Plusieurs filtres peuvent être actifs en même temps</li>
            </ul>
        </li>
        <li>
            <b>S'abonner aux alertes:</b> Le lien <em>M'abonner</em> affiche un message
            informant que la fonctionnalité n'est pas encore disponible.
        </li>
        <li>
            <b>Liste des alertes:</b> La pagination est optionnelle. Vous pouvez:
            <ul style="margin: 0;">
                <li>Afficher toutes des alertes sur un même page <b>OU</b></li>
                <li>Ajouter un bouton en fin de liste pour charger plus d'alertes</li>
            </ul>
        </li>
        <li>
            <b>Page de détail:</b> La page de détail affiche le contenu complet de l'alerte sélectionnée.
        </li>
        <li><b>Responsive design:</b>  L'interface doit être adaptée aux petits écrans (mobile)</li>
        <li>
            <b>Données:</b> Pour ce projet, nous n'utiliserons pas de données réelles (API). 
            Vous pouvez utiliser des données fictives ou des données simulées.
        </li>
    </ul>

    <h2 id="evaluation">Évaluation</h2>
    <p>L'évaluation de ce projet se fera en fonction des critères suivants :</p>

    <ul>
        <li>Structure de l'application.</li>
        <li>Décomposition en composant.</li>
        <li>Respect de la spécification.</li>
        <li>Fidélité de l'interface utilisateur.</li>
        <li>Adaptation de l'interface aux petits écrans.</li>
        <li>Qualité du code et respect des bonnes pratiques.</li>
        <li>Maitrise du code et de l'application.</li>
    </ul>

    <p>
        Ce projet compte pour <strong>30% de la note finale</strong>. Vous devez
        remettre votre projet sur GitHub avant la date limite de remise: <strong
            >dimanche 6 avril.</strong
        >
        Des <strong>pénalités de 10% par jour de retard </strong> seront appliquées
        <strong>jusqu'au 8 avril.</strong>
        Au-delà de cette date, une note de 0 sera attribuée au devoir. <br />
        Une évaluation de votre application et de votre maîtrise aura lieu en classe
        le <strong>mardi 8 avril.</strong>
    </p>

    <!-- <h2>Mandat du projet</h2>
  
  <h4>
    Création de l’interface interactive avec React :
  </h4>
  
  <ul>
    <li>Intégrer React dans la structure existante du site.</li>
    <li>Développer les composants interactifs pour afficher les alertes (ex : cartes d'alertes, barre de recherche, etc.).</li>
  </ul>
  
  <h4>Adaptation de l'interface aux petits écrans</h4>
  
  <ul>
    <li>Adapter l’interface pour qu'elle soit lisible et fonctionnelle sur des smartphones et tablettes.</li>
    <li>Utiliser des menus hamburgers, icônes simples et boutons adaptés aux écrans tactiles.</li> 
  </ul>

  <h4>Implémentation du filtre fonctionnel</h4>
  <ul>
    <li>Créer un filtre simple permettant de trier les alertes par date ou type d'alerte.</li>
    <li>Assurer une mise à jour dynamique des alertes lorsqu’un filtre est appliqué.</li>
  </ul> -->
</StarlightPage>
